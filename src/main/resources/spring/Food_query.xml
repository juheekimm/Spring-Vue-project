<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.model.dao.FoodDAO">
	<select id="search" parameterType="int" resultType="food">
		select * from
		food where code=#{code}
		order by count desc
	</select>

	<select id="searchAll" resultType="food">
		select * from food
		<!-- 동적 쿼리시 조건에 의해 where 나 and를 붙여주는 태그 -->
		order by count desc
	</select>

	<select id="searchAllBean" resultType="food"	parameterType="pagebean">
		select * from food
		<where>
			<if test='key != null and key!="all"'>
				<if test=" word != null">
					<choose>
						<when test="key == 'name'">
							name like concat('%',#{word},'%')
						</when>
						<when test="key == 'maker'">
							maker like concat('%',#{word},'%')
						</when>
						<when test="key == 'material'">
							material like concat('%',#{word},'%')
						</when>
					</choose>
				</if>
			</if>
		</where>
		order by count desc
	</select>

	<select id="foodCount" resultType="int" parameterType="pagebean">
		select count(*) from food
		<where>
			<if test='key != null and key!="all"'>
				<if test=" word != null">
					<choose>
						<when test="key == 'name'">
							name like concat('%',#{word},'%')
						</when>
						<when test="key == 'maker'">
							maker like concat('%',#{word},'%')
						</when>
						<when test="key == 'material">
							material like concat('%',#{word},'%')
						</when>
					</choose>
				</if>
			</if>
		</where>
	</select>
	
	<select id="searchCharacter" resultType="int" parameterType="string">
		select code from food
		where name like concat('%', #{input}, '%')
		order by count desc
	</select>
	
	<select id="addCount" resultType="int">
		update food set count= count + 1
		where code = #{code}
	</select>
</mapper>
























































	












